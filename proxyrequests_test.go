package proxyrequests

import (
	"fmt"
	"testing"
	"time"

	"github.com/sirupsen/logrus"
)

func init() {
	logrus.SetLevel(logrus.DebugLevel)
}

func TestSocks5Proxy(t *testing.T) {
	type AutoGenerated struct {
		IP       string `json:"ip"`
		City     string `json:"city"`
		Region   string `json:"region"`
		Country  string `json:"country"`
		Loc      string `json:"loc"`
		Org      string `json:"org"`
		Timezone string `json:"timezone"`
		Readme   string `json:"readme"`
	}

	header := Header{
		"accept":          "application/json",
		"accept-language": "en,en-US;q=0.9;q=0.8,zh;q=0.7;q=0.6",
		"user-agent":      `Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36`,
		"content-type":    "application/json",
	}

	// timeout
	timeout := SetTimeout(time.Second * 30)
	// 代理
	proxy := Proxy("socks://127.0.0.1:21080")

	resp, err := Get("https://ipinfo.io", header, proxy, timeout)
	if err != nil {
		t.Fatal(err)
	}

	obj := &AutoGenerated{}
	fmt.Println(resp.Json(obj))
	fmt.Println(obj)

}
